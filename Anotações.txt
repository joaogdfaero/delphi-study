PRINCIPAIS ARQUIVOS DELPHI:

.pas -> Contém as infos dos formulários
.dfm -> Responsável pelo visual do formulário (clica com o direito e em "View as text" no form que ele aparece)
.dpr -> Arquivo do projeto (que roda o projeto)

_______________________________________________________________________________________________

TIPOS DE DADOS DO DELPHI:

É fortimento tipado -> precisa dizer pro programa qual é o tipo de dado antes de defini-lo
Exemplo: não pode simplesmente fazer "x = 1".

Tem que ser:
i : integer;
c : currency;
f : double; (float)
r : real;
s : string;
b : boolean;
Date: TDateTime

i := 1; (só o "=" seria comparação"
c := 4.34;
f := 5.43;
s := "João";
b := false;

_______________________________________________________________________________________________

PROCEDURES E FUNCTIONS

PROCEDURE: não retorna um valor apenas executa o que está dentro dele
FUNCTION: executa e retorna um valor

Exemplo de Procedure:
procedure ExibeVariavel(Valor : String);

procedure TForm3.ExibeVariavel(Valor : String);
begin
 ShowMessage(Valor)
end;

Para chamar esse procedure:
begin
 ExibeVariavel('asdasddsa');
end;

PROCEDURE DIZ QUAL É A ENTRADA:
procedure ExibeVariavel(Valor : String);

FUNCTION DIZ QUAL É A SAÍDA:
function fncExibeTexto : boolean;

QUANDO CHAMA A FUNÇÃO PRECISA TER NA SAÍDA UM RESULT IGUAL AO TIPO DE ARQUIVO DA FUNÇÃO:
function TForm1.fncExibeTexto: string;
begin
  Result := '';
end;

_______________________________________________________________________________________________
DEBUG

F8 avança linha a linha
F9 roda todo o programa
F7 entra dentro de um procedure/function

_______________________________________________________________________________________________
ESTRUTURA BÁSICA DE UM PROJETO NO DELPHI

unit NomeDasPartes;   { Representa o nome do arquivo .pas que está sendo usado }

interface  { Palavra reservada que define uma seção do código }

uses   { Quais os outras classes que o nosso arquivo está usando (clica com o direito e "Find Declaration"
para abrir}
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs;

type  {Cria um tipo (o que é tipo?)}
  TForm1 = class(TForm)
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var { Declaração de variáveis globais que podem ser acessadas de qualquer lugar }
  Form1: TForm1;

implementation {Para implementar procedures e functions aqui}

{$R *.dfm}

end.

_______________________________________________________________________________________________
CASTING
StrToInt(Global) # -> String para Int
IntToStr(Valor) # -> Int para String

_______________________________________________________________________________________________
ESTRUTURAS LÓGICAS
OR
AND
NOT -> Não
= -> Igual
<> -> Diferente
<= -> Menor ou igual
_______________________________________________________________________________________________
INPUT DE DADOS

procedure TForm1.Button1Click(Sender: TObject);
var
  Retorno : String;
begin
  Retorno := InputBox('Entrada de Dados','Informe seu Nome','');
  ShowMessage('Seu nome é: ' + Retorno);
end;
end.
_______________________________________________________________________________________________
Salvando o executável do projeto

Na aba superior:
Project -> Build All Projects

_______________________________________________________________________________________________
EVENTOS EM OBJETOS
Clica no objeto e vai na janela esquerda inferior OBJECT INSPECTOR.

Nela vai em EVENTS. Clica duas vezes no campo vazio do Event e então programa ele.

_______________________________________________________________________________________________
APARÊNCIA DOS PROJETOS
Vai em Project -> Option -> Appearance para definir templates top
